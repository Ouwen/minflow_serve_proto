// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/classification.proto

/*
Package classification is a generated protocol buffer package.

It is generated from these files:
	protobuf/classification.proto

It has these top-level messages:
	Class
	Classifications
	ClassificationResult
	ClassificationRequest
	ClassificationResponse
*/
package classification

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import tensorflow_serving "github.com/ouwen/minflow_serve_proto/protobuf/input"
import tensorflow_serving1 "github.com/ouwen/minflow_serve_proto/protobuf/model"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// A single class.
type Class struct {
	// Label or name of the class.
	Label string `protobuf:"bytes,1,opt,name=label" json:"label,omitempty"`
	// Score for this class (e.g., the probability the item belongs to this
	// class).
	Score float32 `protobuf:"fixed32,2,opt,name=score" json:"score,omitempty"`
}

func (m *Class) Reset()                    { *m = Class{} }
func (m *Class) String() string            { return proto.CompactTextString(m) }
func (*Class) ProtoMessage()               {}
func (*Class) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Class) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Class) GetScore() float32 {
	if m != nil {
		return m.Score
	}
	return 0
}

// List of classes for a single item (tensorflow.Example).
type Classifications struct {
	Classes []*Class `protobuf:"bytes,1,rep,name=classes" json:"classes,omitempty"`
}

func (m *Classifications) Reset()                    { *m = Classifications{} }
func (m *Classifications) String() string            { return proto.CompactTextString(m) }
func (*Classifications) ProtoMessage()               {}
func (*Classifications) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Classifications) GetClasses() []*Class {
	if m != nil {
		return m.Classes
	}
	return nil
}

// Contains one result per input example, in the same order as the input in
// ClassificationRequest.
type ClassificationResult struct {
	Classifications []*Classifications `protobuf:"bytes,1,rep,name=classifications" json:"classifications,omitempty"`
}

func (m *ClassificationResult) Reset()                    { *m = ClassificationResult{} }
func (m *ClassificationResult) String() string            { return proto.CompactTextString(m) }
func (*ClassificationResult) ProtoMessage()               {}
func (*ClassificationResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ClassificationResult) GetClassifications() []*Classifications {
	if m != nil {
		return m.Classifications
	}
	return nil
}

type ClassificationRequest struct {
	// Model Specification.
	ModelSpec *tensorflow_serving1.ModelSpec `protobuf:"bytes,1,opt,name=model_spec,json=modelSpec" json:"model_spec,omitempty"`
	// Input data.
	Input *tensorflow_serving.Input `protobuf:"bytes,2,opt,name=input" json:"input,omitempty"`
}

func (m *ClassificationRequest) Reset()                    { *m = ClassificationRequest{} }
func (m *ClassificationRequest) String() string            { return proto.CompactTextString(m) }
func (*ClassificationRequest) ProtoMessage()               {}
func (*ClassificationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ClassificationRequest) GetModelSpec() *tensorflow_serving1.ModelSpec {
	if m != nil {
		return m.ModelSpec
	}
	return nil
}

func (m *ClassificationRequest) GetInput() *tensorflow_serving.Input {
	if m != nil {
		return m.Input
	}
	return nil
}

type ClassificationResponse struct {
	// Result of the classification.
	Result *ClassificationResult `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *ClassificationResponse) Reset()                    { *m = ClassificationResponse{} }
func (m *ClassificationResponse) String() string            { return proto.CompactTextString(m) }
func (*ClassificationResponse) ProtoMessage()               {}
func (*ClassificationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ClassificationResponse) GetResult() *ClassificationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*Class)(nil), "tensorflow.serving.Class")
	proto.RegisterType((*Classifications)(nil), "tensorflow.serving.Classifications")
	proto.RegisterType((*ClassificationResult)(nil), "tensorflow.serving.ClassificationResult")
	proto.RegisterType((*ClassificationRequest)(nil), "tensorflow.serving.ClassificationRequest")
	proto.RegisterType((*ClassificationResponse)(nil), "tensorflow.serving.ClassificationResponse")
}

func init() { proto.RegisterFile("protobuf/classification.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 317 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0xb1, 0x6e, 0xf2, 0x30,
	0x18, 0x94, 0xf9, 0x05, 0xbf, 0xf8, 0x18, 0x90, 0x2c, 0x5a, 0xd1, 0x4a, 0x48, 0x28, 0x5d, 0x32,
	0x25, 0x12, 0xac, 0x0c, 0x6d, 0x91, 0x2a, 0x75, 0x60, 0x71, 0x37, 0x16, 0x44, 0xdc, 0x0f, 0x6a,
	0xc9, 0xb1, 0xd3, 0xd8, 0x2e, 0x6f, 0xd0, 0x67, 0xee, 0x58, 0xd9, 0x86, 0xb6, 0x40, 0xa3, 0x6e,
	0xf1, 0xe5, 0xee, 0x7c, 0x77, 0x09, 0x8c, 0xaa, 0x5a, 0x5b, 0x5d, 0xb8, 0x4d, 0xce, 0xe5, 0xda,
	0x18, 0xb1, 0x11, 0x7c, 0x6d, 0x85, 0x56, 0x59, 0xc0, 0x29, 0xb5, 0xa8, 0x8c, 0xae, 0x37, 0x52,
	0xef, 0x32, 0x83, 0xf5, 0x9b, 0x50, 0xdb, 0xeb, 0xc1, 0x97, 0x44, 0xa8, 0xca, 0xd9, 0xc8, 0xfc,
	0x81, 0x96, 0xfa, 0x19, 0x65, 0x44, 0x93, 0x29, 0xb4, 0xe7, 0xde, 0x97, 0x0e, 0xa0, 0x2d, 0xd7,
	0x05, 0xca, 0x21, 0x19, 0x93, 0xb4, 0xcb, 0xe2, 0xc1, 0xa3, 0x86, 0xeb, 0x1a, 0x87, 0xad, 0x31,
	0x49, 0x5b, 0x2c, 0x1e, 0x92, 0x07, 0xe8, 0xcf, 0x8f, 0xc2, 0x18, 0x3a, 0x85, 0xff, 0x21, 0x1f,
	0x9a, 0x21, 0x19, 0xff, 0x4b, 0x7b, 0x93, 0xab, 0xec, 0x3c, 0x59, 0x16, 0x54, 0xec, 0xc0, 0x4c,
	0x10, 0x06, 0xc7, 0x3e, 0x0c, 0x8d, 0x93, 0x96, 0x2e, 0xa0, 0x7f, 0x5c, 0xf6, 0x60, 0x7a, 0xd3,
	0x68, 0xfa, 0x4d, 0x65, 0xa7, 0xda, 0xe4, 0x9d, 0xc0, 0xc5, 0xe9, 0x3d, 0xaf, 0x0e, 0x8d, 0xa5,
	0x33, 0x80, 0x30, 0xc6, 0xca, 0x54, 0xc8, 0x43, 0xf3, 0xde, 0x64, 0xf4, 0xdb, 0x1d, 0x0b, 0xcf,
	0x7a, 0xaa, 0x90, 0xb3, 0x6e, 0x79, 0x78, 0xa4, 0x39, 0xb4, 0xc3, 0xc0, 0x61, 0x9c, 0x86, 0xc6,
	0x8f, 0x9e, 0xc0, 0x22, 0x2f, 0x59, 0xc2, 0xe5, 0x59, 0xdf, 0x4a, 0x2b, 0x83, 0xf4, 0x16, 0x3a,
	0x75, 0xe8, 0xbe, 0x0f, 0x91, 0xfe, 0x5d, 0x34, 0x6e, 0xc5, 0xf6, 0xba, 0xfb, 0xbb, 0xe5, 0x6c,
	0x2b, 0xec, 0x8b, 0x2b, 0x32, 0xae, 0xcb, 0x5c, 0xbb, 0x1d, 0xaa, 0xbc, 0x14, 0xca, 0x1b, 0xac,
	0xbc, 0x01, 0xae, 0xc2, 0x07, 0xcf, 0x1b, 0x7e, 0xa7, 0x0f, 0x42, 0x8a, 0x4e, 0x78, 0x37, 0xfd,
	0x0c, 0x00, 0x00, 0xff, 0xff, 0xe9, 0x2f, 0x2c, 0xfe, 0x73, 0x02, 0x00, 0x00,
}
